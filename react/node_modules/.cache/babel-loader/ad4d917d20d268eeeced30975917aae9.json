{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\nvar time_estimates;\ntime_estimates = {\n  estimate_attack_times: function (guesses) {\n    var crack_times_display, crack_times_seconds, scenario, seconds;\n    crack_times_seconds = {\n      online_throttling_100_per_hour: guesses / (100 / 3600),\n      online_no_throttling_10_per_second: guesses / 10,\n      offline_slow_hashing_1e4_per_second: guesses / 1e4,\n      offline_fast_hashing_1e10_per_second: guesses / 1e10\n    };\n    crack_times_display = {};\n    for (scenario in crack_times_seconds) {\n      seconds = crack_times_seconds[scenario];\n      crack_times_display[scenario] = this.display_time(seconds);\n    }\n    return {\n      crack_times_seconds: crack_times_seconds,\n      crack_times_display: crack_times_display,\n      score: this.guesses_to_score(guesses)\n    };\n  },\n  guesses_to_score: function (guesses) {\n    var DELTA;\n    DELTA = 5;\n    if (guesses < 1e3 + DELTA) {\n      return 0;\n    } else if (guesses < 1e6 + DELTA) {\n      return 1;\n    } else if (guesses < 1e8 + DELTA) {\n      return 2;\n    } else if (guesses < 1e10 + DELTA) {\n      return 3;\n    } else {\n      return 4;\n    }\n  },\n  display_time: function (seconds) {\n    var base, century, day, display_num, display_str, hour, minute, month, ref, year;\n    minute = 60;\n    hour = minute * 60;\n    day = hour * 24;\n    month = day * 31;\n    year = month * 12;\n    century = year * 100;\n    ref = seconds < 1 ? [null, 'less than a second'] : seconds < minute ? (base = Math.round(seconds), [base, base + \" second\"]) : seconds < hour ? (base = Math.round(seconds / minute), [base, base + \" minute\"]) : seconds < day ? (base = Math.round(seconds / hour), [base, base + \" hour\"]) : seconds < month ? (base = Math.round(seconds / day), [base, base + \" day\"]) : seconds < year ? (base = Math.round(seconds / month), [base, base + \" month\"]) : seconds < century ? (base = Math.round(seconds / year), [base, base + \" year\"]) : [null, 'centuries'], display_num = ref[0], display_str = ref[1];\n    if (display_num != null && display_num !== 1) {\n      display_str += 's';\n    }\n    return display_str;\n  }\n};\nmodule.exports = time_estimates;","map":{"version":3,"names":["time_estimates","estimate_attack_times","guesses","crack_times_display","crack_times_seconds","scenario","seconds","online_throttling_100_per_hour","online_no_throttling_10_per_second","offline_slow_hashing_1e4_per_second","offline_fast_hashing_1e10_per_second","display_time","score","guesses_to_score","DELTA","base","century","day","display_num","display_str","hour","minute","month","ref","year","Math","round","module","exports"],"sources":["../src/time_estimates.coffee"],"sourcesContent":[null],"mappings":";AAAA,IAAAA,cAAA;AAAAA,cAAA,GACE;EAAAC,qBAAA,EAAuB,SAAAA,CAACC,OAAD;IACrB,IAAAC,mBAAA,EAAAC,mBAAA,EAAAC,QAAA,EAAAC,OAAA;IAAAF,mBAAA,GACE;MAAAG,8BAAA,EAAgCL,OAAA,IAAW,MAAM,IAAP,CAA1C;MACAM,kCAAA,EAAoCN,OAAA,GAAU,EAD9C;MAEAO,mCAAA,EAAqCP,OAAA,GAAU,GAF/C;MAGAQ,oCAAA,EAAsCR,OAAA,GAAU;;IAElDC,mBAAA,GAAsB;IACtB,KAAAE,QAAA,IAAAD,mBAAA;;MACED,mBAAoB,CAAAE,QAAA,CAApB,GAAgC,IAAC,CAAAM,YAAD,CAAcL,OAAd;IADlC;WAGA;MAAAF,mBAAA,EAAqBA,mBAArB;MACAD,mBAAA,EAAqBA,mBADrB;MAEAS,KAAA,EAAO,IAAC,CAAAC,gBAAD,CAAkBX,OAAlB;;EAbc,CAAvB;EAgBAW,gBAAA,EAAkB,SAAAA,CAACX,OAAD;IAChB,IAAAY,KAAA;IAAAA,KAAA,GAAQ;IACR,IAAGZ,OAAA,GAAU,MAAMY,KAAnB;aAEE;KAFF,MAGK,IAAGZ,OAAA,GAAU,MAAMY,KAAnB;aAEH;KAFG,MAGA,IAAGZ,OAAA,GAAU,MAAMY,KAAnB;aAEH;KAFG,MAGA,IAAGZ,OAAA,GAAU,OAAOY,KAApB;aAGH;KAHG;aAMH;;EAjBc,CAhBlB;EAmCAH,YAAA,EAAc,SAAAA,CAACL,OAAD;IACZ,IAAAS,IAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA;IAAAH,MAAA,GAAS;IACTD,IAAA,GAAOC,MAAA,GAAS;IAChBJ,GAAA,GAAMG,IAAA,GAAO;IACbE,KAAA,GAAQL,GAAA,GAAM;IACdO,IAAA,GAAOF,KAAA,GAAQ;IACfN,OAAA,GAAUQ,IAAA,GAAO;IACjBD,GAAA,GAAgCjB,OAAA,GAAU,CAAb,GAC3B,CAAC,IAAD,EAAO,oBAAP,CAD2B,GAErBA,OAAA,GAAUe,MAAb,IACHN,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAX,CAAP,EACA,CAACS,IAAD,EAAUA,IAAD,GAAM,SAAf,CADA,IAEMT,OAAA,GAAUc,IAAb,IACHL,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAA,GAAUe,MAArB,CAAP,EACA,CAACN,IAAD,EAAUA,IAAD,GAAM,SAAf,CADA,IAEMT,OAAA,GAAUW,GAAb,IACHF,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAA,GAAUc,IAArB,CAAP,EACA,CAACL,IAAD,EAAUA,IAAD,GAAM,OAAf,CADA,IAEMT,OAAA,GAAUgB,KAAb,IACHP,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAA,GAAUW,GAArB,CAAP,EACA,CAACF,IAAD,EAAUA,IAAD,GAAM,MAAf,CADA,IAEMT,OAAA,GAAUkB,IAAb,IACHT,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAA,GAAUgB,KAArB,CAAP,EACA,CAACP,IAAD,EAAUA,IAAD,GAAM,QAAf,CADA,IAEMT,OAAA,GAAUU,OAAb,IACHD,IAAA,GAAOU,IAAI,CAACC,KAAL,CAAWpB,OAAA,GAAUkB,IAArB,CAAP,EACA,CAACT,IAAD,EAAUA,IAAD,GAAM,OAAf,CADA,IAGA,CAAC,IAAD,EAAO,WAAP,CArBF,EAACG,WAAA,GAAAK,GAAA,GAAD,EAAcJ,WAAA,GAAAI,GAAA;IAsBd,IAAsBL,WAAA,YAAiBA,WAAA,KAAe,CAAtD;MAAAC,WAAA,IAAe;;WACfA,WAAA;EA9BY;;AAgChBQ,MAAM,CAACC,OAAP,GAAiB5B,cAAA"},"metadata":{},"sourceType":"script"}